1주차
 수학적인 풀이를 했을 때 주로 사용되는 것은 두 확률변수에서 사전확률과 사후확률의 사이를 발견하는 것인 '베이즈 정리'와 신경망이 훈련 데이터를 잘 처리하는지 확인 하는 '평균제곱 오차'와 미분에 대해 수업을 들었다. 그리고 DeZero 클래스이다. 
variable 클래스를 구현이 가능하며, 안에 있는 데이터는 넘파이의 다차원배열을 사용한다.
그리고 DeZero의 variable 클래스는 넘파이의 다차원 배열만 취급이 된다. 
넘파이 다차원 배열 클래스는 numpy.ndarry >> np.ndarray으로 줄여 작성한다.
다차원 배열은 예시로 텐서와 ndim인스턴스 변수가 있다. 
프로그램 언어에서 함수는 재사용 가능한 코드 블록과 특정 작업을 수행하는 일련의 코드를 그룹화 한 것이며, DeZero에서는 변수를 기입하면 결과값을 추출하는 것이다. 
함수란 변수 사이의 대응관계를 정하는  것이며 , 노드와 에지로 구성된 데이터 구조인 계산 그래프가 있다.
그리고 딥 러닝 모델의 각 레이어와 연산이 어떻게 서로 상호작용하는지 시각적으로 파악한다. 
계산그래프는 모델의 구조를 이해하고 효율적으로 학습하고 실행하는데에 도움을 준다. 
Function 그래프는 Variable 인스턴스를 변수로 다룰 수 있는 함수를 구현하며, Variable를 입력받아 출력을 한다. 
__call__메소드는 해당 클래스의 인스턴스 함수처럼 호출 할 때 호출되는 메소드이다. 
함수의 연결의 목적은 더 복잡한 계산을 수행하기 위함이다. 
EXP()함수는 e^2를 계산하는 함수이다. 
소스를 작성할 때 forward 메서드의 내용을 np.exp()로 작성한다.
DeZero를 연속적인 계산을 통해 (e^2)^2을 구할 수 있다. 이유는 __call__메서드는 입출력 모두 Variable 이기 때문이다. 
수치미분은 미세한 차이를 이용하여 함수의 변화량을 구하는 방법이다.
중앙차분은 전진차분모다 중앙차분이 오차가 적어 가장 미분값에 가깝기 때문이다. 
수치미분의 문제점은 결과에 오차가 포함이 되어 있기 때문이다. 
그리고 계산량이 많다. 변수가 여러 개인의 계산을 미분 해야 할 경우 각각의 미분을 진행해야 한다. 
이를 해결하기 위해 역전파를 진행한다. 역으로 진행되는 형태라 생각한다. 
연쇠법칙은 여러 함수를 연결하여 사용하는 방법이다. 
합성함수의 미분은 구성 함수 각각을 미분 후 곱한 것과 같다. 
역전파의 원리는 구성함수들의 미분을 곱으로 분해 할 수 있는것을 뜻한다. 
손실함수는 기계 학습 모델의 성능을 측정하기 위해 사용되는 함수이며, 예측값과 관측값 사이의 차이를 나타내며, 차이가 작을 수록 성능이 좋다. 
2주차
